{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.9", "generated_at": "2025-06-06T16:35:45.620781Z", "invocation_id": "f9089c67-2a9c-41f2-bb61-be6c22a19862", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.120764Z", "completed_at": "2025-06-06T16:35:44.136433Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.136433Z", "completed_at": "2025-06-06T16:35:44.136433Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01566934585571289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_dbo__Calendar", "compiled": true, "compiled_code": "with\n\ncalendar as (\n\n    select\n        *\n    from \"KNSDataLake\".\"dbo\".\"calendar\"\n)\n\nselect * from calendar;", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_dbo__Calendar\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.136433Z", "completed_at": "2025-06-06T16:35:44.136433Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.136433Z", "completed_at": "2025-06-06T16:35:44.136433Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_deposco__CoLine", "compiled": true, "compiled_code": "with \n\nsource as (\n    \n    select * from \"KNSDataLake\".\"deposco\".\"co_line\"\n\n),\n\ncleaned as (\n\n    select\n        cast(CO_LINE_ID as bigint) as CoLineId,\n        cast(UPDATED_DATE as datetime) as UpdatedDate,\n        cast(STATUS as varchar(50)) as Status\n    from source\n\n)\n\nselect * from cleaned", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__CoLine\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.152067Z", "completed_at": "2025-06-06T16:35:44.152067Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.152067Z", "completed_at": "2025-06-06T16:35:44.152067Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_deposco__Item", "compiled": true, "compiled_code": "with\n\nsource as (\n    \n        select * from \"KNSDataLake\".\"deposco\".\"item\"\n\n),\n\ncleaned as (\n\n    select \n        cast(ITEM_ID as bigint) as ItemId,\n        cast(INTANGIBLE_ITEM_FLAG as bit) as IntangibleItemFlag,\n        cast(CLASS_TYPE as nvarchar(30)) as ClassType,\n        cast(STYLE_NUMBER as varchar(100)) as StyleNumber,\n        cast(COLOR_NAME as varchar(150)) as ColorName,\n        cast(NAME as varchar(250)) as Name,\n        cast([NUMBER] as varchar(200)) as [Number],\n        cast(UPDATED_DATE as datetime) as UpdatedDate\n    from source\n\n)\n\nselect * from cleaned", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__Item\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.152067Z", "completed_at": "2025-06-06T16:35:44.167700Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.167700Z", "completed_at": "2025-06-06T16:35:44.167700Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01563286781311035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_deposco__Location", "compiled": true, "compiled_code": "with\n\nsource as (\n    \n        select * from \"KNSDataLake\".\"deposco\".\"location\"\n\n),\n\ncleaned as (\n\n    select \n        cast(LOCATION_ID as bigint) as LocationId\n    from source\n\n)\n\nselect * from cleaned", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__Location\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.167700Z", "completed_at": "2025-06-06T16:35:44.167700Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.167700Z", "completed_at": "2025-06-06T16:35:44.167700Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_deposco__OrderHeader", "compiled": true, "compiled_code": "with\n\nsource as (\n    \n    select * from \"KNSDataLake\".\"deposco\".\"order_header\"\n\n),\n\ncleaned as (\n\n    select\n        cast(ORDER_HEADER_ID as bigint) as OrderHeaderId,\n        cast(CURRENT_STATUS as varchar(50)) as CurrentStatus,\n        cast(TYPE as varchar(50)) as Type,\n        cast(CREATED_DATE as date) as CreatedDate,\n        cast(SHIPPING_STATUS as int) as ShippingStatus,\n        cast(CONSIGNEE_PARTNER_ID as bigint) as ConsigneePartnerId,\n        cast(SELLER as varchar(50)) as Seller,\n        cast(PARENT_ORDER_ID as bigint) as ParentOrderId,\n        cast(ORDER_SOURCE as varchar(100)) as OrderSource,\n        cast(CUSTOMER_ORDER_NUMBER as varchar(50)) as CustomerOrderNumber,\n        cast(UPDATED_DATE as datetime) as UpdatedDate,\n        cast(KNS_MT_PLACED_DATE as datetime) as KnsMtPlacedDate,\n        cast(KNS_MT_CREATED_DATE as datetime) as KnsMtCreatedDate,\n        cast(KNS_MT_PLANNED_RELEASE_DATE as\tdatetime) as KnsMtPlannedReleaseDate,\n        cast(KNS_MT_PLANNED_SHIP_DATE as datetime) as KnsMtPlannedShipDate,\n        cast(KNS_MT_ACTUAL_SHIP_DATE as\tdatetime) as KnsMtActualShipDate,\n        cast(CO_HEADER_ID as bigint) as CoHeaderId\n    from source\n\n)\n\nselect * from cleaned", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__OrderHeader\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.167700Z", "completed_at": "2025-06-06T16:35:44.183327Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.183327Z", "completed_at": "2025-06-06T16:35:44.183327Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01562643051147461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_deposco__OrderLine", "compiled": true, "compiled_code": "with\n\nsource as (\n    \n    select * from \"KNSDataLake\".\"deposco\".\"order_line\"\n\n),\n\ncleaned as (\n\n    select\n        cast(ORDER_LINE_ID as bigint) as OrderLineId,\n        cast(PACK_ID as bigint) as PackId,\n        cast(ORDER_HEADER_ID as bigint) as OrderHeaderId,\n        cast(ITEM_ID as bigint) as ItemId,\n        cast(ORDER_PACK_QUANTITY as float) as OrderPackQuantity,\n        cast(ORDER_LINE_STATUS as varchar(50)) as OrderLineStatus,\n        cast(CO_LINE_ID as bigint) as CoLineId,\n        cast(SHIPPED_PACK_QUANTITY as float) as ShippedPackQuantity,\n        cast(UNIT_COST as float) as UnitCost,\n        cast(UPDATED_DATE as datetime) as UpdatedDate\n    from source\n\n)\n\nselect * from cleaned", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__OrderLine\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.183327Z", "completed_at": "2025-06-06T16:35:44.198948Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.198948Z", "completed_at": "2025-06-06T16:35:44.198948Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015621662139892578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_deposco__Pack", "compiled": true, "compiled_code": "with\n\nsource as (\n    \n        select * from \"KNSDataLake\".\"deposco\".\"pack\"\n\n),\n\ncleaned as (\n\n    select \n        cast(PACK_ID as bigint) as PackId,\n        cast(QUANTITY as int) as Quantity\n    from source\n\n)\n\nselect * from cleaned", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__Pack\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.198948Z", "completed_at": "2025-06-06T16:35:44.214577Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.214577Z", "completed_at": "2025-06-06T16:35:44.214577Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015629053115844727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_deposco__ReceiptLine", "compiled": true, "compiled_code": "with\n\nsource as (\n    \n        select * from \"KNSDataLake\".\"deposco\".\"receipt_line\"\n\n),\n\ncleaned as (\n\n    select \n        cast(ORDER_LINE_ID as bigint) as OrderLineId,\n        cast(RECEIVED_PACK_QUANTITY as int) as ReceivedPackQuantity\n    from source\n\n)\n\nselect * from cleaned", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__ReceiptLine\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.214577Z", "completed_at": "2025-06-06T16:35:44.214577Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.214577Z", "completed_at": "2025-06-06T16:35:44.214577Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_deposco__Shipment", "compiled": true, "compiled_code": "with\n\nsource as (\n    \n        select * from \"KNSDataLake\".\"deposco\".\"shipment\"\n\n),\n\ncleaned as (\n\n    select \n        cast(SHIPMENT_ID as bigint) as ShipmentId,\n        cast(FREIGHT_TERMS_TYPE as varchar(50)) as FreightTermsType,\n        cast(SHIPPING_COST as float) as ShippingCost\n    from source\n\n)\n\nselect * from cleaned", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__Shipment\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.214577Z", "completed_at": "2025-06-06T16:35:44.230184Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.230184Z", "completed_at": "2025-06-06T16:35:44.230184Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015606880187988281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_deposco__ShipmentLine", "compiled": true, "compiled_code": "with\n\nsource as (\n    \n        select * from \"KNSDataLake\".\"deposco\".\"shipment_line\"\n\n),\n\ncleaned as (\n\n    select \n        cast(SHIPMENT_ID as bigint) as ShipmentId,\n        cast(SHIPPED_PACK_QUANTITY as float) as ShippedPackQuantity\n    from source\n\n)\n\nselect * from cleaned", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__ShipmentLine\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.230184Z", "completed_at": "2025-06-06T16:35:44.230184Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.230184Z", "completed_at": "2025-06-06T16:35:44.230184Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_deposco__ShipmentOrderHeader", "compiled": true, "compiled_code": "with\n\nsource as (\n    \n        select * from \"KNSDataLake\".\"deposco\".\"shipment_order_header\"\n\n),\n\ncleaned as (\n\n    select \n        cast(ORDER_HEADER_ID as bigint) as OrderHeaderId,\n        cast(SHIPMENT_ID as bigint) as ShipmentId\n    from source\n\n)\n\nselect * from cleaned", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__ShipmentOrderHeader\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.245830Z", "completed_at": "2025-06-06T16:35:44.245830Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.245830Z", "completed_at": "2025-06-06T16:35:44.245830Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_deposco__StockUnit", "compiled": true, "compiled_code": "with \n\nsource as (\n    \n    select * from \"KNSDataLake\".\"deposco\".\"stock_unit\"\n\n),\n\ncleaned as (\n\n    select\n        cast(ITEM_ID as bigint) as ItemId,\n        cast(PACK_ID as bigint) as PackId,\n        cast(QUANTITY as int) as Quantity,\n        cast(PeriodStart as date) as PeriodStart,\n        cast(PeriodEnd as date) as PeriodEnd,\n        cast(LOCATION_ID as bigint) as LocationId\n    from source\n\n)\n\nselect * from cleaned", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__StockUnit\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.245830Z", "completed_at": "2025-06-06T16:35:44.261450Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.261450Z", "completed_at": "2025-06-06T16:35:44.261450Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015620708465576172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_deposco__StockUnitAuditHistory", "compiled": true, "compiled_code": "with \n\nsource as (\n    \n    select * from \"KNSDataLake\".\"deposco\".\"STOCK_UNIT_AUDIT_HISTORY\"\n\n),\n\ncleaned as (\n\n    select\n        cast(ITEM_ID as bigint) as ItemId,\n        cast(PACK_ID as bigint) as PackId,\n        cast(QUANTITY as int) as Quantity,\n        cast(PeriodStart as date) as PeriodStart,\n        cast(PeriodEnd as date) as PeriodEnd,\n        cast(LOCATION_ID as bigint) as LocationId\n    from source\n\n)\n\nselect * from cleaned", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__StockUnitAuditHistory\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.261450Z", "completed_at": "2025-06-06T16:35:44.277070Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.277070Z", "completed_at": "2025-06-06T16:35:44.277070Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015619993209838867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_deposco__TradingPartner", "compiled": true, "compiled_code": "with \n\nsource as (\n\n    select * from \"KNSDataLake\".\"deposco\".\"trading_partner\"\n\n),\n\ncleaned as (\n\n    select\n         cast(TRADING_PARTNER_ID as bigint) as TradingPartnerId,\n         cast(CODE as varchar(40)) as Code,\n         cast(NAME as varchar(50)) as Name,\n         cast(BILL_TO_COUNTRY as varchar(100)) as BillToCountry,\n         cast(CONTACT_EMAIL as varchar(50)) as IsReturnsPartner,\n         cast(TAX_RATE as float) as TaxRate,\n         cast(UPS_ACCOUNT_NUMBER as varchar(100)) as UpsAccountNumber\n    from source\n\n)\n\nselect * from cleaned;", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__TradingPartner\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.277070Z", "completed_at": "2025-06-06T16:35:44.292633Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.292633Z", "completed_at": "2025-06-06T16:35:44.292633Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015563011169433594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_kns__FreightForwarder_AirAndSea", "compiled": true, "compiled_code": "with \n\nsource as (\n    \n    select * from \"KNSDataLake\".\"kns\".\"FreightForwarder_AirAndSea\"\n\n),\n\ncleaned as (\n\n    select\n\t\tcast(SUBSTRING(trim(c.value),0,CHARINDEX(' ',trim(c.value),0)) as varchar(100)) as Number,\n\t\t'AirAndSea' as FreightForwarder,\n\t\tcast([Load ETD] as date) as VesselLoadedAt,\n        case \n            when [Last Sea Leg ATA] = '' then null\n            else cast([Last Sea Leg ATA] as date)\n        end as EstimatedUSPortAt,\n        case\n            when [First Rail Leg ETD] = '' then null\n            else cast([First Rail Leg ETD] as date)\n\t\tend as EstimatedUSStartShipAt,\n\t\tcast(dateadd(day, iif(s.[Disch.] = 'USSLC', 2, 5), nullif(s.[Disch. ETA], '')) as date) as EstimatedArrivalAt\n\tfrom source s\n\tcross apply STRING_SPLIT([Container #], ',') c\n\twhere trim(c.value) != ''\n\tand trim(c.value) not like '(%'\n    and [Container #] is not null\n\n)\n\nselect * from cleaned", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_kns__FreightForwarder_AirAndSea\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.292633Z", "completed_at": "2025-06-06T16:35:44.308322Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.308322Z", "completed_at": "2025-06-06T16:35:44.308322Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015689373016357422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_kns__FreightForwarder_DSV", "compiled": true, "compiled_code": "with \n\nsource as (\n    \n        select * from \"KNSDataLake\".\"kns\".\"FreightForwarder_DSV\"\n\n),\n\ncleaned as (\n\n        select\n            cast(ContainerNumber as varchar(100)) as [Number],\n            'DSV' as FreightForwarder,\n            cast(max(iif(EventCode='FLO', EventDate, null)) as date) as VesselLoadedAt,\n            cast(coalesce(\n                max(iif(EventCode='ARV', EventDate, null)),\n                max(iif(EventCode='ETA', EventDate, null))\n            ) as date) as EstimatedUSPortAt,\n            cast(null as date) as EstimatedUSStartShipAt,\n            cast(max(iif(EventCode='ESTIMATED_DELIVERY', EventDate, null)) as date) as EstimatedArrivalAt\n        from source\n        where ContainerNumber is not null\n            and ContainerNumber != ''\n        group by ContainerNumber\n\n)\n\nselect * from cleaned", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_kns__FreightForwarder_DSV\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.308322Z", "completed_at": "2025-06-06T16:35:44.308322Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.323889Z", "completed_at": "2025-06-06T16:35:44.323889Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015566349029541016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_kns__FreightForwarder_POMasterFile", "compiled": true, "compiled_code": "with \n\nsource as (\n    \n    select ContainerNumber from \"KNSDataLake\".\"kns\".\"POMasterFile\"\n\n),\n\ncleaned as (\n\n    select\n        ContainerNumber as [Number],\n        'UnknownFromMaster' as FreightForwarder,\n        cast(null as date) as VesselLoadedAt,\n        cast(null as date) as EstimatedUSPortAt,\n        cast(null as date) as EstimatedUSStartShipAt,\n        cast(null as date) as EstimatedArrivalAt\n    from source \n    where ContainerNumber is not null\n    and ContainerNumber != ''\n\n)\n\nselect * from cleaned", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_kns__FreightForwarder_POMasterFile\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.323889Z", "completed_at": "2025-06-06T16:35:44.323889Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.323889Z", "completed_at": "2025-06-06T16:35:44.323889Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_kns__FreightForwarder_SFI", "compiled": true, "compiled_code": "with \n\nsource as (\n    \n    select * from \"KNSDataLake\".\"kns\".\"FreightForwarder_SFI\"\n\n),\n\ncleaned as (\n\n    select\n        cast([Container No.] as varchar(100)) as [Number],\n        'SFI' as FreightForwarder,\n        cast(null as date) as VesselLoadedAt,\n        cast(coalesce(ATA, ETA) as date) as EstimatedUSPortAt,\n        cast(dateadd(day, -7, [Place of Delivery ETA]) as date) as EstimatedUSStartShipAt,\n        cast(dateadd(day, 4, [Place of Delivery ETA]) as date) as EstimatedArrivalAt\n    from source\n    where [Container No.] is not null\n    and [Container No.] != ''\n        \n)\n\nselect * from cleaned", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_kns__FreightForwarder_SFI\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.339517Z", "completed_at": "2025-06-06T16:35:44.339517Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.339517Z", "completed_at": "2025-06-06T16:35:44.339517Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01562809944152832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_kns__HistoricalDimItem", "compiled": true, "compiled_code": "with \n\nsource as (\n    \n    select * from \"KNSDevSandbox\".\"Dev\".\"HistoricalDimItem\"\n\n),\n\ncleaned as (\n\n    select\n        cast(ItemId as int) as ItemId,\n        cast(Category as nvarchar(200)) as Category,\n        cast(Subcategory as nvarchar(200)) as Subcategory,\n        cast(FirstReceivedDate as date) as FirstReceivedDate,\n        cast(CloseOut as nvarchar(8)) as CloseOut,\n        cast(CloseOutDate as date) as CloseOutDate,\n        cast(ToeStyle as nvarchar(50)) as ToeStyle,\n        cast(HeelType as nvarchar(50)) as HeelType,\n        cast(LiquidationCloseOut as bit) as LiquidationCloseOut,\n        cast(SoftCloseOut as bit) as SoftCloseOut,\n        cast(MasterCategory as nvarchar(200)) as MasterCategory\n    from source\n        \n)\n\nselect * from cleaned", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_kns__HistoricalDimItem\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.339517Z", "completed_at": "2025-06-06T16:35:44.339517Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.355140Z", "completed_at": "2025-06-06T16:35:44.355140Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015622854232788086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_marketing__CoOpCampaign", "compiled": true, "compiled_code": "with \n\nsource as (\n\n    select * from \"KNSDataLake\".\"marketing\".\"CoOpCampaign\"\n\n),\n\ncleaned as (\n\n    select \n        cast(FrontCode as nvarchar(50)) as FrontCode,\n        cast(BackCode as nvarchar(50)) as BackCode,\n        cast(Spend as decimal(19, 4)) as Spend,\n        cast(StartAt as date) as StartAt,\n        cast(EndAt as date) as EndAt\n    from source\n\n)\n\nselect * from cleaned;", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_marketing__CoOpCampaign\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.355140Z", "completed_at": "2025-06-06T16:35:44.355140Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.355140Z", "completed_at": "2025-06-06T16:35:44.355140Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_marketing__Criteo", "compiled": true, "compiled_code": "with \n\nsource as (\n\n    select * from \"KNSDataLake\".\"marketing\".\"Criteo\"\n\n),\n\ncleaned as (\n\n    select \n        cast(date as date) as date,\n        cast(campaignName as nvarchar(128)) as campaignName,\n        cast(retailerName as nvarchar(128)) as retailerName,\n        cast(spend as decimal(19, 4)) as spend,\n        cast(attributedSales as decimal(19, 4)) as attributedSales,\n        cast(attributedUnits as decimal(19, 4)) as attributedUnits,\n        cast(ctr as decimal(19, 4)) as ctr,\n        cast(impressions as decimal(19, 4)) as impressions\n    from source \n    where \n    date >= dateadd(year, -2, getdate())\n\n        \n)\n\nselect * from cleaned", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_marketing__Criteo\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.355140Z", "completed_at": "2025-06-06T16:35:44.370813Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.370813Z", "completed_at": "2025-06-06T16:35:44.370813Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01567363739013672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_marketing__Northbeam", "compiled": true, "compiled_code": "with \n\nsource as (\n\n    select * from \"KNSDataLake\".\"marketing\".\"Northbeam\"\n\n),\n\ncleaned as (\n\n    select \n        cast(date as date) as date,\n        cast(breakdown_platform_northbeam as nvarchar(256)) as breakdown_platform_northbeam,\n        cast(campaign_name as nvarchar(256)) as campaign_name,\n        cast(adset_name as nvarchar(256)) as adset_name,\n        cast(ad_name as nvarchar(256)) as ad_name,    \n        cast(attribution_model as nvarchar(256)) as attribution_model,\n        cast(attribution_window as nvarchar(256)) as attribution_window,\n        cast(ctr as decimal(19, 4)) as ctr,\n        cast(imprs as decimal(19, 4)) as imprs,\n        cast(attributed_rev as decimal(19, 4)) as attributed_rev,\n        cast(spend as decimal(19, 4)) as spend,\n        cast(visits as decimal(19, 4)) as visits\n    from source\n    where \n    date >= dateadd(year, -2, getdate())\n\n)\n\nselect * from cleaned;", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_marketing__Northbeam\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.370813Z", "completed_at": "2025-06-06T16:35:44.370813Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.370813Z", "completed_at": "2025-06-06T16:35:44.370813Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_marketing__PromoteIq", "compiled": true, "compiled_code": "with \n\nsource as (\n\n    select * from \"KNSDataLake\".\"marketing\".\"PromoteIQ\"\n\n),\n\ncleaned as (\n\n    select \n        cast(Date as date) as Date,\n        cast([Campaign Name] as nvarchar(128)) as [Campaign Name],\n        cast([Vendor Name] as nvarchar(128)) as [Vendor Name],\n        cast(CTR as decimal(19, 4)) as CTR,\n        cast(Impressions as decimal(19, 4)) as Impressions,\n        cast([Total Sales] as decimal(19, 4)) as [Total Sales],\n        cast([Units Sold] as decimal(19, 4)) as [Units Sold],\n        cast(Spend as decimal(19, 4)) as Spend\n    from source\n    where \n    Date >= dateadd(year, -2, getdate())\n\n\n)\n\nselect * from cleaned;", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_marketing__PromoteIq\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.386442Z", "completed_at": "2025-06-06T16:35:44.386442Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.386442Z", "completed_at": "2025-06-06T16:35:44.386442Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_marketing__Roundel", "compiled": true, "compiled_code": "with \n\nsource as (\n\n    select * from \"KNSDataLake\".\"marketing\".\"Roundel\"\n\n),\n\ncleaned as (\n\n    select \n        cast(event_day as date) as date,\n        cast(campaign_name as nvarchar(128)) as campaignName,\n        cast(adjusted_actualized_spend as decimal(19, 4)) as spend,\n        cast(total_sales as decimal(19, 4)) as attributedSales,\n        cast(total_units as decimal(19, 4)) as attributedUnits,\n        cast(clicks as decimal(19, 4)) as clicks,\n        cast(impressions as decimal(19, 4)) as impressions\n    from source \n        \n)\n\nselect * from cleaned", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_marketing__Roundel\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.386442Z", "completed_at": "2025-06-06T16:35:44.402018Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.402018Z", "completed_at": "2025-06-06T16:35:44.402018Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015575885772705078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_marketing__Symbiosys", "compiled": true, "compiled_code": "with \n\nsource as (\n\n    select * from \"KNSDataLake\".\"marketing\".\"Symbiosys\"\n\n),\n\ncleaned as (\n\n    select \n        cast(Day as date) as Date,\n        cast(Campaign as nvarchar(256)) as Campaign,\n        cast(Channel as nvarchar(50)) as Channel,\n        cast(Spend as decimal(19, 4)) as Spend,\n        cast([Units Sold] as decimal(19, 4)) as [Units Sold],\n        cast(Sales as decimal(19, 4)) as Sales\n    from source\n\n)\n\nselect * from cleaned;", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_marketing__Symbiosys\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.402018Z", "completed_at": "2025-06-06T16:35:44.402018Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.402018Z", "completed_at": "2025-06-06T16:35:44.402018Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_netsuite__Entity", "compiled": true, "compiled_code": "with \n\nsource as (\n\n    select * from \"KNSDataLake\".\"netsuite\".\"entity\"\n\n),\n\ncleaned as (\n\n    select \n        cast(id as bigint) as Id,\n        cast(entityid as nvarchar(128)) as EntityId\n    from source \n        \n)\n\nselect * from cleaned", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_netsuite__Entity\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.417690Z", "completed_at": "2025-06-06T16:35:44.417690Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.417690Z", "completed_at": "2025-06-06T16:35:44.417690Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_netsuite__KnsItemCogs", "compiled": true, "compiled_code": "with \n\nsource as (\n\n    select * from \"KNSDataLake\".\"netsuite\".\"KNS_ItemCogs\"\n\n),\n\ncleaned as (\n\n    select \n        cast(ItemId as bigint) as ItemId,\n        cast(Cost as decimal(19,4)) as Cost\n    from source \n        \n)\n\nselect * from cleaned", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_netsuite__KnsItemCogs\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.417690Z", "completed_at": "2025-06-06T16:35:44.433318Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.433318Z", "completed_at": "2025-06-06T16:35:44.433318Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015628337860107422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_netsuite__Transaction", "compiled": true, "compiled_code": "with\n\nsource as (\n\n    select * from \"KNSDataLake\".\"netsuite\".\"transaction\"\n\n),\n\ncleaned as (\n\n    select\n        cast(id as bigint) as Id,\n        cast(custbody_kns_po as nvarchar(4000)) as Memo,\n        cast(entity as bigint) as Entity,\n        cast(trandate as date) as TranDate,\n        cast(tranid as nvarchar(90)) as TranId,\n        cast(otherrefnum as nvarchar(90)) as OtherRefNum\n    from source\n\n)\n\nselect * from cleaned", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_netsuite__Transaction\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.433318Z", "completed_at": "2025-06-06T16:35:44.433318Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.433318Z", "completed_at": "2025-06-06T16:35:44.433318Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_netsuite__TransactionLine", "compiled": true, "compiled_code": "with\n\nsource as (\n\n    select * from \"KNSDataLake\".\"netsuite\".\"transactionLine\"\n\n),\n\ncleaned as (\n\n    select\n        cast(uniquekey as bigint) as UniqueKey,\n        cast([transaction] as bigint) as [Transaction],\n        cast(rate as float) as Rate,\n        cast(expenseaccount as bigint) as ExpenseAccount,\n        cast(debitforeignamount as float) as DebitForeignAmount,\n        cast(creditforeignamount as float) as CreditForeignAmount,\n        cast(memo as nvarchar(4000)) as Memo\n    from source\n\n)\n\nselect * from cleaned", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_netsuite__TransactionLine\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.433318Z", "completed_at": "2025-06-06T16:35:44.448926Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.448926Z", "completed_at": "2025-06-06T16:35:44.448926Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015607833862304688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_orders__SalesOrder", "compiled": true, "compiled_code": "select * from \"KNSUnifiedMDM\".\"Orders\".\"SalesOrder\"", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_orders__SalesOrder\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.448926Z", "completed_at": "2025-06-06T16:35:44.448926Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.448926Z", "completed_at": "2025-06-06T16:35:44.448926Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_orders__SalesOrderLine", "compiled": true, "compiled_code": "select * from \"KNSUnifiedMDM\".\"Orders\".\"SalesOrderLine\"", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_orders__SalesOrderLine\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.464568Z", "completed_at": "2025-06-06T16:35:44.464568Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.464568Z", "completed_at": "2025-06-06T16:35:44.464568Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_orders__TradingPartner", "compiled": true, "compiled_code": "select * from \"KNSUnifiedMDM\".\"Orders\".\"TradingPartner\"", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_orders__TradingPartner\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.464568Z", "completed_at": "2025-06-06T16:35:44.480187Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.480187Z", "completed_at": "2025-06-06T16:35:44.480187Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015619754791259766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_orders__TradingPartnerHandlingFee", "compiled": true, "compiled_code": "select * from \"KNSUnifiedMDM\".\"Orders\".\"TradingPartnerHandlingFee\"", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_orders__TradingPartnerHandlingFee\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.480187Z", "completed_at": "2025-06-06T16:35:44.480187Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.480187Z", "completed_at": "2025-06-06T16:35:44.480187Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_products__Brand", "compiled": true, "compiled_code": "select * from \"KNSUnifiedMDM\".\"Products\".\"Brand\"", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_products__Brand\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.480187Z", "completed_at": "2025-06-06T16:35:44.495816Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.495816Z", "completed_at": "2025-06-06T16:35:44.495816Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015628814697265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_products__Catalog", "compiled": true, "compiled_code": "select * from \"KNSUnifiedMDM\".\"Products\".\"Catalog\"", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_products__Catalog\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.495816Z", "completed_at": "2025-06-06T16:35:44.495816Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.495816Z", "completed_at": "2025-06-06T16:35:44.495816Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_products__Style", "compiled": true, "compiled_code": "select * from \"KNSUnifiedMDM\".\"Products\".\"Style\"", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_products__Style\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.511438Z", "completed_at": "2025-06-06T16:35:44.511438Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.511438Z", "completed_at": "2025-06-06T16:35:44.511438Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_products__Subclass", "compiled": true, "compiled_code": "select * from \"KNSUnifiedMDM\".\"Products\".\"Subclass\"", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_products__Subclass\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.511438Z", "completed_at": "2025-06-06T16:35:44.511438Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.527064Z", "completed_at": "2025-06-06T16:35:44.527064Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015625953674316406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_products__Variant", "compiled": true, "compiled_code": "select * from \"KNSUnifiedMDM\".\"Products\".\"Variant\"", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_products__Variant\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.527064Z", "completed_at": "2025-06-06T16:35:44.527064Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.527064Z", "completed_at": "2025-06-06T16:35:44.527064Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.stg_salsify__Product", "compiled": true, "compiled_code": "with\n\nsource as (\n\n    select * from \"KNSDataLake\".\"salsify\".\"Product\"\n\n),\n\ncleaned as (\n\n    select \n        cast([Main SKU] as nvarchar(128)) as MainSku,\n        cast([Sub Category] as nvarchar(128)) as SubCategory,\n        cast([Merchandise Subclass] as nvarchar(128)) as MerchandiseSubclass,\n        cast([Color Class] as nvarchar(128)) as ColorClass,\n        cast(Color as nvarchar(128)) as Color,\n        cast(Brand as nvarchar(128)) as Brand,\n        cast(Gender as nvarchar(128)) as Gender,\n        cast(Size as nvarchar(128)) as Size,\n        cast(Seasonality as nvarchar(128)) as Seasonality,\n        cast([Size Run] as nvarchar(128)) as SizeRun,\n        cast(Vendor as nvarchar(128)) as Vendor,\n        cast([Vendor SKU] as nvarchar(128)) as VendorSku,\n        cast([Sell Out Target Date Month] as nvarchar(128)) as SellOutTargetDateMonth,\n        cast([Sell Out Target Date Year] as nvarchar(128)) as SellOutTargetDateYear,\n        cast([Planned Arrival Date Month] as nvarchar(128)) as PlannedArrivalDateMonth,\n        cast([First Sales Date] as nvarchar(128)) as FirstSalesDate,\n        cast(Status as nvarchar(128)) as Status,\n        cast([Closure Type] as nvarchar(128)) as ClosureType,\n        cast([Style Type] as nvarchar(128)) as StyleType,\n        cast(Style as nvarchar(128)) as Style,\n        cast([Parent SKU] as nvarchar(128)) as ParentSku,\n        cast([Calf Width] as nvarchar(128)) as CalfWidth,\n        cast([Shoe Width] as nvarchar(128)) as ShoeWidth,\n        cast([Anaplan Active] as bit) as AnaplanActive,\n        cast([Case Quantity] as int) as CaseQuantity,\n        cast(MSRP as decimal(19, 4)) as Msrp,\n        cast(Division as nvarchar(32)) as Division,\n        cast([Season Budget] as nvarchar(16)) as SeasonBudget,\n        cast([Selling Status] as nvarchar(32)) as SellingStatus\n    from source\n\n)\n\nselect * from cleaned", "relation_name": "\"KNSDevDbt\".\"dbt_prod_staging\".\"stg_salsify__Product\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.527064Z", "completed_at": "2025-06-06T16:35:44.542675Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.542675Z", "completed_at": "2025-06-06T16:35:44.542675Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015610694885253906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.kns_dbt.seed_Brands", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.542675Z", "completed_at": "2025-06-06T16:35:44.542675Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.542675Z", "completed_at": "2025-06-06T16:35:44.542675Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.kns_dbt.seed_SizeRun", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.542675Z", "completed_at": "2025-06-06T16:35:44.558312Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.558312Z", "completed_at": "2025-06-06T16:35:44.558312Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015636920928955078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.source_not_null_marketing_Criteo_date.3ff2cfd089", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date\nfrom \"KNSDataLake\".\"marketing\".\"Criteo\"\nwhere date is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.558312Z", "completed_at": "2025-06-06T16:35:44.573934Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.573934Z", "completed_at": "2025-06-06T16:35:44.573934Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015622138977050781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.int_sales__CurrentStock", "compiled": true, "compiled_code": "with\n\nday_start as (\n    select \n        convert(datetime, convert(date, sysdatetimeoffset() at time zone 'mountain standard time')) \n        at time zone 'mountain standard time' \n        at time zone 'utc' as day_start\n),\n\norder_header as (\n    select * from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__OrderHeader\"\n),\n\norder_line as (\n    select * from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__OrderLine\"\n),\n\npack as (\n    select * from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__Pack\"\n),\n\nstock_unit as (\n    select * from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__StockUnit\"\n),\n\nstock_unit_audit_history as (\n    select * from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__StockUnitAuditHistory\"\n),\n\nitem as (\n    select * from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__Item\"\n),\n\nordered as (\n    select\n        ol.ItemId,\n        coalesce(sum(ol.OrderPackQuantity * p2.Quantity), 0) as TotalOrdered\n    from order_line ol\n    join pack p2 on ol.PackId = p2.PackId\n    join order_header oh on ol.OrderHeaderId = oh.OrderHeaderId\n    where oh.ShippingStatus != 20\n        and oh.CurrentStatus not in ('Hold', 'Canceled', 'Voided')\n        and oh.CreatedDate >= dateadd(year, -1, \n        cast(sysdatetimeoffset() at time zone 'mountain standard time' as datetime))\n        and oh.Type = 'Sales Order'\n    group by ol.ItemId\n),\n\nstock_unit_unioned as (\n    select * from stock_unit\n    union all\n    select * from stock_unit_audit_history\n),\n\ncurrent_stock as (\n    select\n        s.ItemId,\n        coalesce(sum(s.Quantity * p.Quantity), 0) as Quantity,\n        case \n            when coalesce(sum(s.Quantity * p.Quantity), 0) - coalesce(o.TotalOrdered, 0) < 0\n                then 0\n            else coalesce(sum(s.Quantity * p.Quantity), 0) - coalesce(o.TotalOrdered, 0)\n        end as AvailableQuantity\n    from stock_unit_unioned s\n    join item i on s.ItemId = i.ItemId\n    join pack p on s.PackId = p.PackId\n    left join ordered o on o.ItemId = s.ItemId\n    cross join day_start                      \n    where i.IntangibleItemFlag = 0\n      and s.PeriodStart <= day_start.day_start\n      and s.PeriodEnd >= day_start.day_start\n      and coalesce(i.ClassType, '') != 'Supplies'\n    group by s.ItemId, o.TotalOrdered\n)\n\nselect * from current_stock", "relation_name": "\"KNSDevDbt\".\"dbt_prod_intermediate\".\"int_sales__CurrentStock\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.573934Z", "completed_at": "2025-06-06T16:35:44.683311Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.683311Z", "completed_at": "2025-06-06T16:35:44.683311Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.10937738418579102, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.dbt_expectations_expect_column_values_to_be_of_type_stg_kns__FreightForwarder_AirAndSea_EstimatedArrivalAt__date.0150e15b41", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('NUMBER' as VARCHAR(8000)) as relation_column,\n            cast('VARCHAR' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('FREIGHTFORWARDER' as VARCHAR(8000)) as relation_column,\n            cast('VARCHAR' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('VESSELLOADEDAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDUSPORTAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDUSSTARTSHIPAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDARRIVALAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'ESTIMATEDARRIVALAT'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.683311Z", "completed_at": "2025-06-06T16:35:44.730178Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.730178Z", "completed_at": "2025-06-06T16:35:44.730178Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04686689376831055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.dbt_expectations_expect_column_values_to_be_of_type_stg_kns__FreightForwarder_AirAndSea_EstimatedUSPortAt__date.b8bfa69e4d", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('NUMBER' as VARCHAR(8000)) as relation_column,\n            cast('VARCHAR' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('FREIGHTFORWARDER' as VARCHAR(8000)) as relation_column,\n            cast('VARCHAR' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('VESSELLOADEDAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDUSPORTAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDUSSTARTSHIPAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDARRIVALAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'ESTIMATEDUSPORTAT'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.730178Z", "completed_at": "2025-06-06T16:35:44.777057Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.777057Z", "completed_at": "2025-06-06T16:35:44.777057Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04687929153442383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.dbt_expectations_expect_column_values_to_be_of_type_stg_kns__FreightForwarder_AirAndSea_EstimatedUSStartShipAt__date.6e7870e9ff", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('NUMBER' as VARCHAR(8000)) as relation_column,\n            cast('VARCHAR' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('FREIGHTFORWARDER' as VARCHAR(8000)) as relation_column,\n            cast('VARCHAR' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('VESSELLOADEDAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDUSPORTAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDUSSTARTSHIPAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDARRIVALAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'ESTIMATEDUSSTARTSHIPAT'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.777057Z", "completed_at": "2025-06-06T16:35:44.823867Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.823867Z", "completed_at": "2025-06-06T16:35:44.823867Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.06243729591369629, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.dbt_expectations_expect_column_values_to_be_of_type_stg_kns__FreightForwarder_AirAndSea_VesselLoadedAt__date.cff0f287eb", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('NUMBER' as VARCHAR(8000)) as relation_column,\n            cast('VARCHAR' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('FREIGHTFORWARDER' as VARCHAR(8000)) as relation_column,\n            cast('VARCHAR' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('VESSELLOADEDAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDUSPORTAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDUSSTARTSHIPAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDARRIVALAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'VESSELLOADEDAT'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.839495Z", "completed_at": "2025-06-06T16:35:44.839495Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.839495Z", "completed_at": "2025-06-06T16:35:44.839495Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.no_1900_dates_stg_kns__FreightForwarder_AirAndSea_EstimatedArrivalAt.8d0ff813d3", "compiled": true, "compiled_code": "\n    select *\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_kns__FreightForwarder_AirAndSea\"\n    where EstimatedArrivalAt = '1900-01-01'\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.855108Z", "completed_at": "2025-06-06T16:35:44.855108Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.855108Z", "completed_at": "2025-06-06T16:35:44.855108Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.no_1900_dates_stg_kns__FreightForwarder_AirAndSea_EstimatedUSPortAt.97dc63685d", "compiled": true, "compiled_code": "\n    select *\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_kns__FreightForwarder_AirAndSea\"\n    where EstimatedUSPortAt = '1900-01-01'\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.855108Z", "completed_at": "2025-06-06T16:35:44.870813Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.870813Z", "completed_at": "2025-06-06T16:35:44.870813Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015705108642578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.no_1900_dates_stg_kns__FreightForwarder_AirAndSea_EstimatedUSStartShipAt.0cbd999917", "compiled": true, "compiled_code": "\n    select *\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_kns__FreightForwarder_AirAndSea\"\n    where EstimatedUSStartShipAt = '1900-01-01'\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.870813Z", "completed_at": "2025-06-06T16:35:44.870813Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.870813Z", "completed_at": "2025-06-06T16:35:44.870813Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.no_1900_dates_stg_kns__FreightForwarder_AirAndSea_VesselLoadedAt.aa52fbe071", "compiled": true, "compiled_code": "\n    select *\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_kns__FreightForwarder_AirAndSea\"\n    where VesselLoadedAt = '1900-01-01'\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.886461Z", "completed_at": "2025-06-06T16:35:44.933303Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:44.948914Z", "completed_at": "2025-06-06T16:35:44.948914Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.06245279312133789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.dbt_expectations_expect_column_values_to_be_of_type_stg_kns__FreightForwarder_DSV_EstimatedArrivalAt__date.a7dd1a5bbf", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('NUMBER' as VARCHAR(8000)) as relation_column,\n            cast('VARCHAR' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('FREIGHTFORWARDER' as VARCHAR(8000)) as relation_column,\n            cast('VARCHAR' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('VESSELLOADEDAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDUSPORTAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDUSSTARTSHIPAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDARRIVALAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'ESTIMATEDARRIVALAT'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:44.948914Z", "completed_at": "2025-06-06T16:35:44.995793Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.011424Z", "completed_at": "2025-06-06T16:35:45.011424Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.06251025199890137, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.dbt_expectations_expect_column_values_to_be_of_type_stg_kns__FreightForwarder_DSV_EstimatedUSPortAt__date.b31b0631bd", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('NUMBER' as VARCHAR(8000)) as relation_column,\n            cast('VARCHAR' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('FREIGHTFORWARDER' as VARCHAR(8000)) as relation_column,\n            cast('VARCHAR' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('VESSELLOADEDAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDUSPORTAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDUSSTARTSHIPAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDARRIVALAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'ESTIMATEDUSPORTAT'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.011424Z", "completed_at": "2025-06-06T16:35:45.058299Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.058299Z", "completed_at": "2025-06-06T16:35:45.058299Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0468745231628418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.dbt_expectations_expect_column_values_to_be_of_type_stg_kns__FreightForwarder_DSV_EstimatedUSStartShipAt__date.e4ec7d834b", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('NUMBER' as VARCHAR(8000)) as relation_column,\n            cast('VARCHAR' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('FREIGHTFORWARDER' as VARCHAR(8000)) as relation_column,\n            cast('VARCHAR' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('VESSELLOADEDAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDUSPORTAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDUSSTARTSHIPAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDARRIVALAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'ESTIMATEDUSSTARTSHIPAT'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.058299Z", "completed_at": "2025-06-06T16:35:45.105159Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.105159Z", "completed_at": "2025-06-06T16:35:45.105159Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.046860694885253906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.dbt_expectations_expect_column_values_to_be_of_type_stg_kns__FreightForwarder_DSV_VesselLoadedAt__date.9583e14d05", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('NUMBER' as VARCHAR(8000)) as relation_column,\n            cast('VARCHAR' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('FREIGHTFORWARDER' as VARCHAR(8000)) as relation_column,\n            cast('VARCHAR' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('VESSELLOADEDAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDUSPORTAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDUSSTARTSHIPAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDARRIVALAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'VESSELLOADEDAT'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.105159Z", "completed_at": "2025-06-06T16:35:45.105159Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.120795Z", "completed_at": "2025-06-06T16:35:45.120795Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015635251998901367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.no_1900_dates_stg_kns__FreightForwarder_DSV_EstimatedArrivalAt.9f4faeb3fa", "compiled": true, "compiled_code": "\n    select *\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_kns__FreightForwarder_DSV\"\n    where EstimatedArrivalAt = '1900-01-01'\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.120795Z", "completed_at": "2025-06-06T16:35:45.120795Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.120795Z", "completed_at": "2025-06-06T16:35:45.120795Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.no_1900_dates_stg_kns__FreightForwarder_DSV_EstimatedUSPortAt.e61cc59608", "compiled": true, "compiled_code": "\n    select *\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_kns__FreightForwarder_DSV\"\n    where EstimatedUSPortAt = '1900-01-01'\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.120795Z", "completed_at": "2025-06-06T16:35:45.136408Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.136408Z", "completed_at": "2025-06-06T16:35:45.136408Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015613079071044922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.no_1900_dates_stg_kns__FreightForwarder_DSV_EstimatedUSStartShipAt.571295a306", "compiled": true, "compiled_code": "\n    select *\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_kns__FreightForwarder_DSV\"\n    where EstimatedUSStartShipAt = '1900-01-01'\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.136408Z", "completed_at": "2025-06-06T16:35:45.152032Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.152032Z", "completed_at": "2025-06-06T16:35:45.152032Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015623807907104492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.no_1900_dates_stg_kns__FreightForwarder_DSV_VesselLoadedAt.0779769e89", "compiled": true, "compiled_code": "\n    select *\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_kns__FreightForwarder_DSV\"\n    where VesselLoadedAt = '1900-01-01'\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.152032Z", "completed_at": "2025-06-06T16:35:45.152032Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.152032Z", "completed_at": "2025-06-06T16:35:45.152032Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.FreightForwarders", "compiled": true, "compiled_code": "with\n\nair_and_sea as (\n\n    select \n        Number,\n        FreightForwarder,\n        min([VesselLoadedAt]) as VesselLoadedAt,\n        min([EstimatedUSPortAt]) as EstimatedUSPortAt,\n        min([EstimatedUSStartShipAt]) as EstimatedUSStartShipAt,\n        min([EstimatedArrivalAt]) as EstimatedArrivalAt\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_kns__FreightForwarder_AirAndSea\"\n    where Number != ''\n        and Number is not null\n    group by Number, FreightForwarder\n),\n\ndsv as (\n\n    select * from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_kns__FreightForwarder_DSV\"\n\n),\n\nsfi as (\n\n    select * from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_kns__FreightForwarder_SFI\"\n\n),\n\npo_master_file as (\n\n    select * from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_kns__FreightForwarder_POMasterFile\"\n    group by [Number], FreightForwarder, VesselLoadedAt, EstimatedUSPortAt, EstimatedUSStartShipAt, EstimatedArrivalAt\n\n),\n\ncombined as (\n\n    select\n        *,\n        1 as priority\n    from air_and_sea\n\n    union all\n\n    select\n        *,\n        2 as priority\n    from dsv\n\n    union all\n\n    select\n        *,\n        3 as priority\n    from sfi\n\n    union all\n\n    select\n        *,\n        4 as priority\n    from po_master_file\n\n),\n\nranked as (\n\n    select \n        *,\n        row_number() over (partition by Number order by priority) as row_num\n    from combined\n\n)\n\nselect \n    Number, FreightForwarder, VesselLoadedAt, EstimatedUSPortAt, EstimatedUSStartShipAt, EstimatedArrivalAt\nfrom ranked\nwhere row_num = 1", "relation_name": "\"KNSDevDbt\".\"dbt_prod_marts\".\"FreightForwarders\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.152032Z", "completed_at": "2025-06-06T16:35:45.198919Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.198919Z", "completed_at": "2025-06-06T16:35:45.198919Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04688739776611328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.dbt_expectations_expect_column_values_to_be_of_type_stg_kns__FreightForwarder_SFI_EstimatedArrivalAt__date.cce0b38b3e", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('NUMBER' as VARCHAR(8000)) as relation_column,\n            cast('VARCHAR' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('FREIGHTFORWARDER' as VARCHAR(8000)) as relation_column,\n            cast('VARCHAR' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('VESSELLOADEDAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDUSPORTAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDUSSTARTSHIPAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDARRIVALAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'ESTIMATEDARRIVALAT'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.214548Z", "completed_at": "2025-06-06T16:35:45.245783Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.245783Z", "completed_at": "2025-06-06T16:35:45.245783Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04687166213989258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.dbt_expectations_expect_column_values_to_be_of_type_stg_kns__FreightForwarder_SFI_EstimatedUSPortAt__date.e4cb327004", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('NUMBER' as VARCHAR(8000)) as relation_column,\n            cast('VARCHAR' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('FREIGHTFORWARDER' as VARCHAR(8000)) as relation_column,\n            cast('VARCHAR' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('VESSELLOADEDAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDUSPORTAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDUSSTARTSHIPAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDARRIVALAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'ESTIMATEDUSPORTAT'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.261420Z", "completed_at": "2025-06-06T16:35:45.308290Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.308290Z", "completed_at": "2025-06-06T16:35:45.308290Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04686999320983887, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.dbt_expectations_expect_column_values_to_be_of_type_stg_kns__FreightForwarder_SFI_EstimatedUSStartShipAt__date.96e1bf2941", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('NUMBER' as VARCHAR(8000)) as relation_column,\n            cast('VARCHAR' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('FREIGHTFORWARDER' as VARCHAR(8000)) as relation_column,\n            cast('VARCHAR' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('VESSELLOADEDAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDUSPORTAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDUSSTARTSHIPAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDARRIVALAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'ESTIMATEDUSSTARTSHIPAT'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.308290Z", "completed_at": "2025-06-06T16:35:45.355158Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.355158Z", "completed_at": "2025-06-06T16:35:45.355158Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04686784744262695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.dbt_expectations_expect_column_values_to_be_of_type_stg_kns__FreightForwarder_SFI_VesselLoadedAt__date.420ac9db3b", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('NUMBER' as VARCHAR(8000)) as relation_column,\n            cast('VARCHAR' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('FREIGHTFORWARDER' as VARCHAR(8000)) as relation_column,\n            cast('VARCHAR' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('VESSELLOADEDAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDUSPORTAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDUSSTARTSHIPAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        union all\n        \n        select\n            cast('ESTIMATEDARRIVALAT' as VARCHAR(8000)) as relation_column,\n            cast('DATE' as VARCHAR(8000)) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'VESSELLOADEDAT'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.370789Z", "completed_at": "2025-06-06T16:35:45.386462Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.386462Z", "completed_at": "2025-06-06T16:35:45.386462Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03130459785461426, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.no_1900_dates_stg_kns__FreightForwarder_SFI_EstimatedArrivalAt.fcff9b26b5", "compiled": true, "compiled_code": "\n    select *\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_kns__FreightForwarder_SFI\"\n    where EstimatedArrivalAt = '1900-01-01'\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.386462Z", "completed_at": "2025-06-06T16:35:45.386462Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.386462Z", "completed_at": "2025-06-06T16:35:45.386462Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.no_1900_dates_stg_kns__FreightForwarder_SFI_EstimatedUSPortAt.8ecfb2dd25", "compiled": true, "compiled_code": "\n    select *\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_kns__FreightForwarder_SFI\"\n    where EstimatedUSPortAt = '1900-01-01'\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.402088Z", "completed_at": "2025-06-06T16:35:45.402088Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.402088Z", "completed_at": "2025-06-06T16:35:45.402088Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015626192092895508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.no_1900_dates_stg_kns__FreightForwarder_SFI_EstimatedUSStartShipAt.62e86b505a", "compiled": true, "compiled_code": "\n    select *\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_kns__FreightForwarder_SFI\"\n    where EstimatedUSStartShipAt = '1900-01-01'\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.402088Z", "completed_at": "2025-06-06T16:35:45.417666Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.417666Z", "completed_at": "2025-06-06T16:35:45.417666Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015578031539916992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.no_1900_dates_stg_kns__FreightForwarder_SFI_VesselLoadedAt.69753375e9", "compiled": true, "compiled_code": "\n    select *\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_kns__FreightForwarder_SFI\"\n    where VesselLoadedAt = '1900-01-01'\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.417666Z", "completed_at": "2025-06-06T16:35:45.433284Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.433284Z", "completed_at": "2025-06-06T16:35:45.433284Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015617847442626953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.not_null_stg_marketing__Criteo_date.861ccae32e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date\nfrom \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_marketing__Criteo\"\nwhere date is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.433284Z", "completed_at": "2025-06-06T16:35:45.433284Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.433284Z", "completed_at": "2025-06-06T16:35:45.433284Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.int_marketing__SourcesUnioned", "compiled": true, "compiled_code": "with \n\ncriteo as (\n\n    select \n        Date,\n        'Criteo-Ad' as AdName,\n        'Criteo-Ad-Set' as AdSet,\n        CampaignName as Campaign,\n        tp.TradingPartnerId as TradingPartnerId,\n        'Criteo' as Platform,\n        null as Channel,\n        null as Type,\n        null as Brand,\n        Spend,\n        ctr as ClickThrough,\n        impressions as Impressions,\n        ctr * impressions as Conversions,\n        attributedSales as SalesDollars,\n        attributedUnits as SalesUnits\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_marketing__Criteo\" c\n    join \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__TradingPartner\" tp\n        on c.retailerName = tp.Name\n    where Spend > 0\n\n),\n\nnorthbeam as (\n    select \n        Date,\n        ad_name as AdName,\n        adset_name as AdSet,\n        campaign_name as Campaign,\n        null as TradingPartnerId,\n        'Northbeam' as Platform,\n        breakdown_platform_northbeam as Channel,\n        null as Type,\n        null as Brand,\n        Spend,\n        --visits / nullif(imprs, 0) as ClickThrough, CHECK IF CTR MEANS WHAT IT ALSO MEANS IN CRITEO\n        ctr as ClickThrough,\n        imprs as Impressions,\n        --visits * 1 / nullif(imprs, 0) * imprs as Conversions,\n        ctr * imprs as Conversions,\n        attributed_rev as SalesDollars,\n        null as SalesUnits\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_marketing__Northbeam\" \n    where attribution_model = 'Clicks and views'\n        and attribution_window = '7'\n),\n\npromoteiq as (\n    select \n        Date,\n        'PromoteIQ-Ad' as AdName,\n        'PromoteIQ-Ad-Set' as AdSet,\n        [Campaign Name] as Campaign,\n        13 as TradingPartnerId,\n        'PromoteIQ' as Platform,\n        null as Channel,\n        null as Type,\n        null as Brand,\n        Spend,\n        CTR as ClickThrough,\n        Impressions,\n        CTR * Impressions as Conversions,\n        [Total Sales] as SalesDollars,\n        [Units Sold] as SalesUnits\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_marketing__PromoteIq\" p\n    where ([Vendor Name] like '%JOURNEE%' or [Vendor Name] like '%VANCE%')\n        and p.[Campaign Name] is not null\n),\n\nsymbiosys as (\n    select \n        Date,\n        'Symbiosys-Ad' as AdName,\n        'Symbiosys-Ad-Set' as AdSet,\n        Campaign as Campaign,\n        3 as TradingPartnerId,\n        'Symbiosys' as Platform,\n        Channel,\n        null as Type,\n        null as Brand,\n        Spend,\n        null as ClickThrough,\n        null as Impressions,\n        null as Conversions,\n        Sales as SalesDollars,\n        [Units Sold] as SalesUnits\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_marketing__Symbiosys\"\n),\n\ncoop_campaign as (\n    select \n        cal.Date,\n        'Co-Op-Campaigns-Ad' as AdName,\n        'Co-Op-Campaigns-Ad-Set' as AdSet,\n        FrontCode as Campaign,\n        cast(substring(substring(trim(BackCode), len(trim(BackCode)) - 20, 21), 1, 3) as int) as TradingPartnerId,\n        'Co-Op Campaigns' as Platform,\n        null as Channel,\n        null as Type,\n        null as Brand,\n        Spend / (\n            select count(*) \n            from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_dbo__Calendar\" cal2 \n            where cal2.Date >= co.StartAt and cal2.Date <= co.EndAt\n        ) as Spend,\n        null as ClickThrough,\n        null as Impressions,\n        null as Conversions,\n        null as SalesDollars,\n        null as SalesUnits\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_marketing__CoOpCampaign\" co\n    join \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_dbo__Calendar\" cal\n        on cal.Date >= co.StartAt and cal.Date <= co.EndAt\n),\n\nroundel as (\n\n    select \n        Date,\n        'Roundel-Ad' as AdName,\n        'Roundel-Ad-Set' as AdSet,\n        campaignName as Campaign,\n        62 as TradingPartnerId,\n        'Roundel' as Platform,\n        null as Channel,\n        null as Type,\n        null as Brand,\n        Spend,\n        clicks / NULLIF(Impressions, 0) as ClickThrough, --CHECK THIS LOGIC\n        Impressions,\n        clicks as Conversions,\n        attributedSales as SalesDollars,\n        attributedUnits as SalesUnits\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_marketing__Roundel\"\n\n),\n\nsources_unioned as (\n    select * from northbeam\n    union all\n    select * from northbeam\n    union all\n    select * from promoteiq\n    union all\n    select * from symbiosys\n    union all\n    select * from coop_campaign\n    union all\n    select * from roundel\n)\n\nselect * from sources_unioned;", "relation_name": "\"KNSDevDbt\".\"dbt_prod_intermediate\".\"int_marketing__SourcesUnioned\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.448963Z", "completed_at": "2025-06-06T16:35:45.448963Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.448963Z", "completed_at": "2025-06-06T16:35:45.448963Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.DimTradingPartner", "compiled": true, "compiled_code": "with \n\ntrading_partners as (\n\n    select\n        TradingPartnerId,\n        Name,\n        Code,\n        FulfillmentChannelType as ChannelType\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_orders__TradingPartner\"\n\n),\n\nfinal as (\n\n    select\n        *,\n        iif (Name in ('DSW', 'MACYS', 'KOHLS', 'TARGET PLUS', 'NORDSTROM RACK', 'JCPENNEY', 'AMAZON', 'WALMART MARKETPLACE', 'KOHLS - WS'), 1, 0) as IsTopPartner\n    from trading_partners\n\n)\n\nselect * from final;", "relation_name": "\"KNSDevDbt\".\"dbt_prod_marts\".\"DimTradingPartner\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.448963Z", "completed_at": "2025-06-06T16:35:45.464521Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.464521Z", "completed_at": "2025-06-06T16:35:45.464521Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015558242797851562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.int_sales__FactSalesLine_ReturnsAccruals", "compiled": true, "compiled_code": "with \n\nsource as (\n\n    select \n        cast(concat('Returns Accrual/', tl.UniqueKey) as nvarchar(255)) as Number,\n        171516 as ItemId,\n        tp.TradingPartnerId as TradingPartnerId,\n        'Discontinued' as Brand,\n        null as LastUpdatedAt,\n        0 as Amount,\n        0 as Quantity,\n        null as PONumber,\n        convert(date, t.TranDate) as PlacedDate,\n        convert(date, t.TranDate) as CreatedDate,\n        convert(date, t.TranDate) as ContractualShipDate,\n        convert(date, t.TranDate) as PlannedShipDate,\n        convert(date, t.TranDate) as ActualShipDate,\n        'Complete' as HeaderCurrentStatus,\n        'Shipped' as HeaderShippingStatus,\n        'Complete' as LineStatus,\n        0 as FreightOutCOGS,\n        coalesce(tl.CreditForeignAmount, 0) - coalesce(tl.DebitForeignAmount, 0) as ItemCOGS,\n        0 as HandlingFee,\n        0 as DiscountAmount,\n        getdate() as RecordUpdatedAt,\n        null as Season\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_netsuite__TransactionLine\" tl\n    join \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_netsuite__Transaction\" t\n        on tl.[Transaction] = t.Id\n    join \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_netsuite__Entity\" e\n        on t.Entity = e.Id\n    join \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_orders__TradingPartner\" tp\n        on e.EntityId = tp.Name\n    where tl.Memo = 'Returns Accrual'\n        and tl.ExpenseAccount=214\n        and (convert(date, eomonth(t.TranDate)) <  dateadd(day, -15, convert(date, SYSDATETIMEOFFSET() at time zone 'mountain standard time')))\n\n)\n\nselect * from source", "relation_name": "\"KNSDevDbt\".\"dbt_prod_intermediate\".\"int_sales__FactSalesLine_ReturnsAccruals\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.464521Z", "completed_at": "2025-06-06T16:35:45.464521Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.464521Z", "completed_at": "2025-06-06T16:35:45.464521Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.int_sales__ReturnRatePrep", "compiled": true, "compiled_code": "with\n\nparams as (\n    select \n        dateadd(year, -1, getdate()) as returns_after\n),\n\naccepted_tp as (\n\n    select\n        Code,\n        TradingPartnerId,\n        Name\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_orders__TradingPartner\"\n    where IsReturnsPartner = 1\n        and Name != 'MARKETING'\n\n),\n\ncustomer_blind_returns as (\n\n    select\n        case \n            when oh.ConsigneePartnerId is not null\n                then (select name from accepted_tp tp where oh.ConsigneePartnerId = tp.TradingPartnerId)\n            else\n                (select name from accepted_tp tp where oh.Seller = tp.Code)\n        end as TradingPartner,\n        i.StyleNumber as Parent,\n        concat(i.StyleNumber, '-', i.ColorName) as Item,\n        null as PurchasedQuantity,\n        rl.ReceivedPackQuantity as ReturnQuantity,\n        datediff(day,\n                cast((select poh.CreatedDate\n                    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__OrderHeader\" poh\n                    where oh.ParentOrderId = poh.OrderHeaderId) as date),\n                cast(oh.CreatedDate as date)\n        ) as ReturnDays\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__ReceiptLine\" rl\n    join \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__OrderLine\" ol \n        on rl.OrderLineId = ol.OrderLineId\n    join \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__OrderHeader\" oh\n        on ol.OrderHeaderId = oh.OrderHeaderId\n    join \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__Item\" i\n        on ol.ItemId = i.ItemId\n    cross join params\n    where oh.Type in ('Blind RMA', 'Customer Return')\n        and (oh.Seller in (select Code from accepted_tp) \n            or oh.ConsigneePartnerId in (select TradingPartnerId from accepted_tp))\n        and oh.CreatedDate > params.returns_after\n        and i.StyleNumber is not null\n        and i.ColorName is not null\n\n),\n\nsales_order_returns as (\n\n    select\n        case \n            when oh.ConsigneePartnerId is not null\n                then (select name from accepted_tp tp where oh.ConsigneePartnerId = tp.TradingPartnerId)\n            else\n                (select name from accepted_tp tp where oh.Seller = tp.Code)\n        end as TradingPartner,\n        i.StyleNumber as Parent,\n        concat(i.StyleNumber, '-', i.ColorName) as Item,\n        OrderPackQuantity as PurchasedQuantity,\n        null as ReturnedQuantity,\n        null as ReturnDays\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__OrderHeader\" oh\n    join \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__OrderLine\" ol \n        on oh.OrderHeaderId = ol.OrderHeaderId\n    join \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__Item\" i\n        on ol.ItemId = i.ItemId\n    cross join params\n    where oh.Type = 'Sales Order'\n        and (oh.OrderSource is null or oh.OrderSource not in \n            ('Shipped Sales', 'Forecast Sales', 'Montly Net Revenue Percent', 'Net Margin', 'Net Revenue Forecast', 'InvalidSource', 'Potential Sales', 'Amazon FBA', 'Walmart WFS')\n            )\n        and oh.CurrentStatus != 'Voided'\n        and (oh.CustomerOrderNumber is null or oh.CustomerOrderNumber not like 'FBA%')\n        and (ol.OrderLineStatus != 'Canceled')\n        and (oh.Seller in (select Code from accepted_tp) \n            or oh.ConsigneePartnerId in (select TradingPartnerId from accepted_tp))\n        and oh.CreatedDate > dateadd(month, -1, params.returns_after)\n        and oh.CreatedDate < dateadd(month, -1, getdate())\n        and i.StyleNumber is not null\n        and i.ColorName is not null\n\n),\n\nreturns_unioned as (\n\n    select * from customer_blind_returns\n    union all\n    select * from sales_order_returns\n\n)\n\nselect * from returns_unioned", "relation_name": "\"KNSDevDbt\".\"dbt_prod_intermediate\".\"int_sales__ReturnRatePrep\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.480167Z", "completed_at": "2025-06-06T16:35:45.480167Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.480167Z", "completed_at": "2025-06-06T16:35:45.480167Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.int_sales__DimItemPrep", "compiled": true, "compiled_code": "with historical as (\n    select * from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_kns__HistoricalDimItem\"\n),\n\nitem as (\n    select * from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__Item\"\n),\n\nitem_cogs as (\n    select * from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_netsuite__KnsItemCogs\"\n),\n\nvariants as (\n    select * from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_products__Variant\"\n),\n\nstyles as (\n    select * from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_products__Style\"\n),\n\nbrands as (\n    select * from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_products__Brand\"\n),\n\nsubclasses as (\n    select * from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_products__Subclass\"\n),\n\ncatalog as (\n    select * from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_products__Catalog\"\n),\n\nproduct as (\n    select\n        v.Number,\n        v.Status,\n        v.ShoeWidth,\n        v.CalfWidth,\n        v.Parent,\n        v.ClosureType,\n        v.HeelType,\n        v.StyleType,\n        v.SizeRun,\n        v.ColorName as Color,\n        v.ColorClass,\n        v.IsAnaplanActive as Anaplan,\n        month(v.SellOutTargetAt) as SellOutTargetDateMonth,\n        year(v.SellOutTargetAt) as SellOutTargetDateYear,\n        v.PlannedArrivalAt as PlannedArrivalDateMonth,\n        v.FirstSalesDateAt as FirstSalesDate,\n        v.MSRP,\n        v.IsSupplies,\n        v.IsIntangible,\n        v.DirectSourcingModel,\n        v.SellingStatus,\n        v.DtcWebsiteColor,\n        s.Name as Style,\n        c.Name as Category,\n        c.BrandId,\n        v.Subclass,\n        s.Class,\n        s.Vendor,\n        v.VendorSku,\n        s.Gender,\n        s.Season,\n        s.CaseQuantity,\n        s.SeasonBudget,\n        null as Size,\n        b.Name as Brand,\n        b.Division\n    from variants v\n    left join styles s on v.StyleId = s.StyleId\n    left join catalog c on s.CatalogId = c.CatalogId\n    left join brands b on c.BrandId = b.BrandId\n),\n\nfinal as (\n\n    select\n        i.ItemId,\n        p.[Number],\n        h.Category,\n        h.Subcategory,\n        coalesce(nullif(p.Brand, ''), '*No Catalog*') as Catalog,\n        coalesce(nullif(p.Vendor, ''), '*No Vendor*') as Vendor,\n        coalesce(nullif(p.Gender, ''), '*No Gender*') as Gender,\n        case\n            when i.[Number] in ('Order Protection', 'Navidium Shipping Protection') then 'Shipping Protection'\n            else coalesce(nullif(p.Parent , ''), '*No Parent*')\n        end as Parent,\n        coalesce(nullif(p.Color, ''), '*No Color*') as Color,\n        coalesce(nullif(p.Season, ''), '*No Season*') as Season,\n        coalesce(nullif(p.Size, ''), '*No Size*') as Size,\n        i.UpdatedDate as UpdatedAt,\n        h.FirstReceivedDate,\n        year(p.FirstSalesDate) as IntroductionYear,\n        h.CloseOut,\n        h.CloseOutDate,\n        h.ToeStyle,\n        p.ClosureType,\n        h.HeelType,\n        p.StyleType,\n        p.SizeRun,\n        h.LiquidationCloseOut,\n        p.CaseQuantity,\n        p.Anaplan,\n        h.SoftCloseOut,\n        ic.cost as Cost,\n        p.Style,\n        h.MasterCategory,\n        p.Class,\n        p.Subclass,\n        p.VendorSKU,\n        p.SellOutTargetDateMonth,\n        p.SellOutTargetDateYear,\n        p.PlannedArrivalDateMonth,\n        p.FirstSalesDate,\n        case \n            when p.Number is null and p.Status = 'Active' then 'Terminated'\n            else p.Status\n        end as Status,\n        p.CalfWidth,\n        '' as BrandFinancialEntity, -- WHY DO WE HAVE THIS?\n        p.ShoeWidth,\n        p.ColorClass,\n        p.IsIntangible,\n        p.MSRP,\n        p.Division,\n        p.IsSupplies,\n        case\n            when i.ItemId = 153085 then 1\n            when i.ItemId = 170695 then 1\n            when i.ItemId = 204260 then 1 \n            when i.ItemId = 204262 then 2\n            when i.ItemId = 204261 then 3\n            when i.ItemId = 212170 then 4\n            else coalesce(p.BrandId, 0)\n        end as BrandId,\n        p.SeasonBudget,\n        p.SellingStatus,\n        p.DirectSourcingModel,\n        p.DtcWebsiteColor\n    from product p \n    left join item i on p.Number = i.[Number]\n    left join historical h on h.ItemId = i.ItemId\n    left join item_cogs ic on ic.ItemId=i.ItemId\n    where i.[Number] is not null\n    and (i.ClassType not in ('Girls''', 'Boys''', 'Gloves', 'Inventory', '') or i.ClassType is null)\n\n)\n\nselect * from final", "relation_name": "\"KNSDevDbt\".\"dbt_prod_intermediate\".\"int_sales__DimItemPrep\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.495793Z", "completed_at": "2025-06-06T16:35:45.495793Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.495793Z", "completed_at": "2025-06-06T16:35:45.495793Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.FactCurrentStock", "compiled": true, "compiled_code": "with\n\ncurrent_stock as (\n    select * from \"KNSDevDbt\".\"dbt_prod_intermediate\".\"int_sales__CurrentStock\"\n)\n\nselect * from current_stock", "relation_name": "\"KNSDevDbt\".\"dbt_prod_marts\".\"FactCurrentStock\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.495793Z", "completed_at": "2025-06-06T16:35:45.511414Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.511414Z", "completed_at": "2025-06-06T16:35:45.511414Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015620946884155273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.int_marketing__SourcesMapped", "compiled": true, "compiled_code": "with\n\nsources as (\n    select * from \"KNSDevDbt\".\"dbt_prod_intermediate\".\"int_marketing__SourcesUnioned\"\n),\n\n-- THIS IS WHERE WE WILL JOIN THE MAPPING TABLE AND FILL IN EMPTY VALUES\n\n-- Step 1: Extract the first token from Campaign (up to the first space, or the whole Campaign)\nbase_campaign as (\n\n    select \n        *,\n        case \n            when charindex(' ', Campaign) > 0 \n                then left(Campaign, charindex(' ', Campaign) - 1)\n            else Campaign\n        end as FirstSegment\n    from sources\n\n),\n\n-- Step 2: Count the number of periods in FirstSegment\ncampaign_with_count as (\n\n    select *,\n           len(FirstSegment) - len(replace(FirstSegment, '.', '')) as PeriodCount\n    from base_campaign\n\n),\n\n-- Step 3: Convert FirstSegment into XML to enable splitting\ncampaign_xml as (\n\n    select *,\n           cast('<i>' + \n\t\t\t replace(\n\t\t\t\t replace(\n\t\t\t\t\t replace(\n\t\t\t\t\t\t replace(FirstSegment, '&', '&amp;'), \n\t\t\t\t\t '<', '&lt;'), \n\t\t\t\t '>', '&gt;'), \n\t\t\t '.', '</i><i>') \n\t\t\t + '</i>' as xml) as XMLParts\n    from campaign_with_count\n\n),\n\n-- Step 4: Parse out each dot-delimited part from the XML\nparsed_campaign as (\n\n    select \n      Date, AdName, AdSet, Campaign, TradingPartnerId, Platform, Channel, Type,\n      Spend, ClickThrough, Impressions, Conversions, SalesDollars, SalesUnits,\n      XMLParts, PeriodCount, FirstSegment,\n      XMLParts.value('(/i)[1]', 'varchar(100)') as Part1,  -- Expecting the brand letter (J, T, V)\n      XMLParts.value('(/i)[2]', 'varchar(100)') as Part2,\n      XMLParts.value('(/i)[3]', 'varchar(100)') as Part3,  -- Code for Objective mapping\n      XMLParts.value('(/i)[4]', 'varchar(100)') as Part4,  -- Code for LandingPage mapping\n      XMLParts.value('(/i)[5]', 'varchar(100)') as Part5,  -- (Optional) Channel from parsed string if needed\n      XMLParts.value('(/i)[6]', 'varchar(100)') as Part6,  -- Class1\n      XMLParts.value('(/i)[7]', 'varchar(100)') as Part7,  -- Class2\n      XMLParts.value('(/i)[8]', 'varchar(100)') as Part8,  -- Class3\n      XMLParts.value('(/i)[9]', 'varchar(100)') as Part9   -- Extra (not used)\n    from campaign_xml\n\n),\n\n-- Step 5: Apply your mapping rules if PeriodCount = 8 (i.e. 9 parts)\ncomplete_parse as (\n\n    select\n      p.*,\n      -- Map the brand letter from Part1 to the full brand name; this will be used to join to dim_brand for BrandId\n      case \n        when PeriodCount = 8 then \n          case p.Part1\n              when 'J' then 'Journee'\n              when 'T' then 'Taft'\n              when 'V' then 'Vance'\n              when 'B' then 'Birdies'\n              else null\n          end\n        else null\n      end as BrandMapping,\n      -- Map Part3 to Objective using your defined codes\n      case \n        when PeriodCount = 8 then\n          case p.Part3\n              when 'TOP' then 'Top Funnel / Awareness'\n              when 'MID' then 'Mid Funnel'\n              when 'BOT' then 'Bottom Funnel / Conversions'\n              when 'RTA' then 'Retargeting'\n              when 'PRO' then 'Prospecting'\n              when 'RET' then 'Retention'\n              when 'NSE' then 'NBSearch'\n              when 'BSE' then 'BrandSearch'\n              when 'PMA' then 'PMax'\n              when 'BSH' then 'BrandShopping'\n              when 'NSH' then 'NBShopping'\n              else null\n          end\n        else null\n      end as ObjectiveMapped,\n      -- Map Part4 to LandingPage using your provided options\n      case \n        when PeriodCount = 8 then \n          case p.Part4\n              when 'Brand'   then 'Brand Page'\n              when 'Product' then 'Product Page'\n              when 'DPA'     then 'Dynamic Product'\n              when 'SPA'     then 'Sponsored Product'\n              when 'CAT'     then 'Category/Collection'\n              else null\n          end\n        else null\n      end as LandingPageMapped,\n      -- Directly assign Class1, Class2, Class3 from parts 6, 7, and 8 respectively (if PeriodCount = 8)\n      case when PeriodCount = 8 then p.Part6 else null end as ParsedClass1,\n      case when PeriodCount = 8 then p.Part7 else null end as ParsedClass2,\n      case when PeriodCount = 8 then p.Part8 else null end as ParsedClass3\n    from parsed_campaign p\n\n)\n\nselect * from complete_parse;", "relation_name": "\"KNSDevDbt\".\"dbt_prod_intermediate\".\"int_marketing__SourcesMapped\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.511414Z", "completed_at": "2025-06-06T16:35:45.511414Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.511414Z", "completed_at": "2025-06-06T16:35:45.511414Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.not_null_DimTradingPartner_TradingPartnerId.1681276484", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect TradingPartnerId\nfrom \"KNSDevDbt\".\"dbt_prod_marts\".\"DimTradingPartner\"\nwhere TradingPartnerId is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.527042Z", "completed_at": "2025-06-06T16:35:45.527042Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.527042Z", "completed_at": "2025-06-06T16:35:45.527042Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015627622604370117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.unique_DimTradingPartner_TradingPartnerId.3848ac0272", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    TradingPartnerId as unique_field,\n    count(*) as n_records\n\nfrom \"KNSDevDbt\".\"dbt_prod_marts\".\"DimTradingPartner\"\nwhere TradingPartnerId is not null\ngroup by TradingPartnerId\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.527042Z", "completed_at": "2025-06-06T16:35:45.542645Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.542645Z", "completed_at": "2025-06-06T16:35:45.542645Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015602588653564453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.FactReturnRate", "compiled": true, "compiled_code": "with\n\nparams as (\n    select \n        70 as stat_threshold,\n        1 as return_processing_day\n),\n\nreturns_temp as (\n\n    select * from \"KNSDevDbt\".\"dbt_prod_intermediate\".\"int_sales__ReturnRatePrep\"\n\n),\n\nmedian as (\n\n    select distinct\n        TradingPartner,\n        case\n            when (select count(*)\n                from returns_temp temp\n                where ReturnDays is not null and main.TradingPartner = temp.TradingPartner) > params.stat_threshold\n            then\n                ((select max(num) \n                from (select top 50 percent ReturnDays AS num \n                        from returns_temp temp \n                        where ReturnDays is not null and main.TradingPartner = temp.TradingPartner \n                        order by ReturnDays) onehalf)\n                +\n                (select min(num) \n                from (select top 50 percent ReturnDays AS num \n                        from returns_temp temp \n                        where ReturnDays is not null and main.TradingPartner = temp.TradingPartner \n                        order by ReturnDays desc) otherhalf)\n                ) / 2 + params.return_processing_day\n            else null\n        end as MedianDays\n    from returns_temp main\n    cross join params\n\n),\n\naggregated_data as (\n\n    select \n        TradingPartner,\n        Parent,\n        Item,\n        sum(coalesce(ReturnQuantity, 0)) as TotalReturnQuantity,\n        sum(coalesce(PurchasedQuantity, 0)) as TotalPurchasedQuantity\n    from returns_temp\n    group by TradingPartner, Parent, Item\n\n),\n\nfinal as (\n\n    select \n        a.TradingPartner,\n        a.Item as ParentColor,\n        case \n        when a.TotalPurchasedQuantity > params.stat_threshold \n                and a.TotalReturnQuantity < a.TotalPurchasedQuantity\n        then cast(a.TotalReturnQuantity as float) / a.TotalPurchasedQuantity\n        else NULL\n        end as PercentReturnRate,\n        ISNULL(m.MedianDays, 60) as ReturnLagDays\n    from aggregated_data a\n    left join median m on m.TradingPartner = a.TradingPartner\n    cross join params\n    where a.TotalPurchasedQuantity > params.stat_threshold \n    and a.TotalReturnQuantity < a.TotalPurchasedQuantity \n    and a.TotalPurchasedQuantity > 0\n\n)\n\nselect * from final", "relation_name": "\"KNSDevDbt\".\"dbt_prod_marts\".\"FactReturnRate\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.542645Z", "completed_at": "2025-06-06T16:35:45.542645Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.558285Z", "completed_at": "2025-06-06T16:35:45.558285Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015640735626220703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.DimItem", "compiled": true, "compiled_code": "\n  \n\n\nwith\n\ndim_item as (\n    select * from \"KNSDevDbt\".\"dbt_prod_intermediate\".\"int_sales__DimItemPrep\"\n),\n\nsize_run as (\n    select \n        * \n    from \"KNSDevDbt\".\"prod\".\"seed_SizeRun\"\n    where Code in ('M-Standard-1','F-Standard-1','U-Generic-1')\n),\n\ncurrent_stock as (\n    select \n        ItemId,\n        AvailableQuantity\n    from \"KNSDevDbt\".\"dbt_prod_intermediate\".\"int_sales__CurrentStock\"\n),\n\ntemp_line as (\n    select \n        i.ItemId,\n        isnull(cs.AvailableQuantity,0) as AvailableQuantity,\n        case when isnull(cs.AvailableQuantity,0) > 4 then 1 else 0 end as InStock,\n        concat(i.Parent, '-', i.Color) as Item,\n        isnull(sr.IsCore, 0) as Core \n    from dim_item i\n    left join size_run sr on sr.Gender = i.Gender and sr.Size = i.Size\n    left join current_stock cs on i.ItemId = cs.ItemId\n\n),\n\ntemp_agg as (\n    select \n        Item,\n        case \n            when SUM(AvailableQuantity) = 0  then 'No Stock'\n            when SUM(Instock) = COUNT(Instock) then 'Complete Run'\n            when SUM(Instock*cast(Core as int)) = SUM(cast(Core as int)) and SUM(cast(Core as int))!= 0 then 'Core Run'\n            when SUM(cast(Core as int)) > 0 and 1.0*SUM(Instock*cast(Core as int))/SUM(cast(Core as int)) < .3  then 'Hash'\n            else 'Broken Core'\n        end as BrokenStatus\n    from temp_line\n    group by Item\n),\n\nbroken as (\n\n    select \n        ItemId,\n        BrokenStatus\n    from temp_line tl\n    join temp_agg ta on tl.Item = ta.Item\n\n),\n\nfinal as (\n    select\n        i.*,\n        b.BrokenStatus\n    from dim_item i\n    left join broken b on i.ItemId = b.ItemId\n)\n\nselect * from final", "relation_name": "\"KNSDataWarehouse\".\"Deposco\".\"DimItem\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.558285Z", "completed_at": "2025-06-06T16:35:45.558285Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.558285Z", "completed_at": "2025-06-06T16:35:45.558285Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.FactMarketingAd", "compiled": true, "compiled_code": "with \n\nbrands as (\n    select * from \"KNSDevDbt\".\"prod\".\"seed_Brands\"\n),\n\nmarketing_data as (\n\n    select * from \"KNSDevDbt\".\"dbt_prod_intermediate\".\"int_marketing__SourcesMapped\"\n\n),\n\nfinal as (\n    select \n        m.[Date],\n        m.[AdName],\n        m.[AdSet],\n        m.[Campaign],\n        m.TradingPartnerId,\n        m.[Platform],\n        m.Channel,\n        m.Type,\n        b.BrandId,\n        m.ObjectiveMapped as Objective,\n        m.LandingPageMapped as LandingPage,\n        m.ParsedClass1 as Class1,\n        m.ParsedClass2 as Class2,\n        m.ParsedClass3 as Class3,\n        cast(Spend as decimal(19, 4)) as Spend,\n        cast(ClickThrough as decimal(19, 4)) as ClickThrough,\n        cast(Impressions as decimal(19, 4)) as Impressions,\n        cast(Conversions as decimal(19, 4)) as Conversions,\n        cast(SalesDollars as decimal(19, 4)) as SalesDollars,\n        cast(SalesUnits as decimal(19, 4)) as SalesUnits\n\n    from marketing_data m\n    left join brands b \n        on b.Brand = m.BrandMapping\n    where TradingPartnerId is not null\n)\n\nselect * from final;", "relation_name": "\"KNSDevDbt\".\"dbt_prod_marts\".\"FactMarketingAd\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.558285Z", "completed_at": "2025-06-06T16:35:45.573897Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.573897Z", "completed_at": "2025-06-06T16:35:45.573897Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015612125396728516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.int_sales__FactSalesLine_Deposco", "compiled": true, "compiled_code": "with \n\nupdate_order_protection as (\n    select\n        ol.OrderLineId as Number,\n        oh.CoHeaderId as ChId\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__OrderLine\" ol\n    join \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__Item\" i \n        on i.ItemId = ol.ItemId\n    join \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__OrderHeader\" oh \n        on oh.OrderHeaderId = ol.OrderHeaderId\n    where i.Name = 'Order Protection'\n        and coalesce(i.ClassType, '') = ''\n),\n\nch_ids as (\n    select\n        ol.OrderLineId as Number,\n        oh.CoHeaderId as ChId,\n        di.BrandId\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__OrderLine\" ol \n    join \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__OrderHeader\" oh \n        on oh.OrderHeaderId = ol.OrderHeaderId\n    join \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__Item\" i \n        on i.ItemId = ol.ItemId\n    join \"KNSDataWarehouse\".\"Deposco\".\"DimItem\" di \n        on di.ItemId = i.ItemId\n    where coalesce(i.Name, '') != 'Order Protection'\n),\n\norder_protection_mapping as (\n    select \n        o.Number,\n        max(c.BrandId) as BrandId\n    from update_order_protection o\n    join ch_ids c \n        on c.ChId = o.ChId\n    group by o.Number\n),\n\norder_protection_item as (\n    select \n        i.ItemId,\n        i.BrandId\n    from \"KNSDataWarehouse\".\"Deposco\".\"DimItem\" i\n    where i.ItemId in (\n        204260\n        ,204261\n        ,204262\n        ,212170\n    )\n),\n\nsales_order as (\n    select\n        SalesOrderId,\n        PONumber,\n        TradingPartnerId,\n        PlacedAt,\n        ContractualShipAt,\n        PlannedShipAt,\n        Status,\n        ShippedAt,\n        FreightOutCOGSAmount,\n        DiscountAmount\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_orders__SalesOrder\"\n),\n\nsales_order_line as (\n    select\n        sol.SalesOrderLineId,\n        sol.SalesOrderId,\n        sol.SourceId,\n        sol.ItemId,\n        sol.ProductVariantId,\n        case\n            when so.Status = 'closed' then sol.QuantityShipped\n            else sol.QuantityOrdered\n        end as Quantity,\n        sol.UnitCostAmount,\n        sol.UnitItemCOGSAmount,\n        sol.QuantityShipped\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_orders__SalesOrderLine\" sol\n    left join sales_order so\n    on sol.SalesOrderId = so.SalesOrderId\n),\n\n-- THIS SHOULD BE RENAMED TO TRADING_PARTNER AFTER FIXING THE TRADING PARTNER ID\nmdm_trading_partner as (\n    select\n        TradingPartnerId,\n        Name\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_orders__TradingPartner\"\n),\n\n-- trading_partner_handling_fee as (\n--     select\n--         TradingPartnerId,\n--         StartDate,\n--         EndDate,\n--         HandlingFeeType,\n--         HandlingFee\n--     from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_orders__TradingPartnerHandlingFee\"\n-- ),\n\ntrading_partner as (\n    select\n        TradingPartnerId,\n        Name,\n        TaxRate\n    from \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_deposco__TradingPartner\"\n),\n\njoined as (\n    select\n        cast(concat('Deposco/', sol.SourceId) as nvarchar(255)) as Number,\n        case \n            when opi.ItemId is not null and sol.ItemId != opi.ItemId then opi.ItemId\n            else sol.ItemId\n        end as ItemId,\n        tp.TradingPartnerId,\n        b.Name as Brand,\n        null as LastUpdatedAt,\n        sol.Quantity*sol.UnitCostAmount as Amount,\n        sol.Quantity,\n        so.PONumber,\n        so.PlacedAt as PlacedDate,\n        so.PlacedAt as CreatedDate,\n        so.ContractualShipAt as ContractualShipDate,\n        so.PlannedShipAt as PlannedShipDate,\n        so.ShippedAt as ActualShipDate,\n        case\n            when so.Status = 'open' then 'New'\n            when so.Status = 'closed' then 'Complete'\n            else null\n        end as HeaderCurrentStatus,\n        case\n            when so.Status = 'open' then 'Not Shipped'\n            when so.Status = 'closed' then 'Shipped'\n            else null\n        end as HeaderShippingStatus,\n        case\n            when so.Status = 'open' then 'New'\n            when so.Status = 'closed' then 'Complete'\n            else null\n        end as LineStatus,\n        convert(decimal(19,4),\n            (cast(sol.Quantity as decimal(19,4)) / \n            nullif(sum(coalesce(sol.Quantity, 0)) over (partition by sol.SalesOrderId), 0)) \n            * so.FreightOutCOGSAmount\n        ) as FreightOutCOGS,\n        sol.UnitItemCOGSAmount*sol.Quantity as ItemCOGS,\n        -- case\n        --     when tphf.HandlingFeeType = 'Order' \n        --         then tphf.HandlingFee\n        --     when tphf.HandlingFeeType = 'Unit' \n        --         then tphf.HandlingFee*sol.Quantity\n        --     else null\n        -- end as HandlingFee,\n\n        -- DELETE THE FOLLOWING LINE WHEN FIXING TRADING PARTNER ID \n        coalesce(sol.Quantity * tp.TaxRate, 0) as HandlingFee,\n\n        convert(decimal(19,4),\n            (cast(sol.Quantity as decimal(19,4)) / \n            nullif(sum(coalesce(sol.Quantity, 0)) over (partition by sol.SalesOrderId), 0)) \n            * so.DiscountAmount\n        ) as DiscountAmount,\n        null as RecordUpdatedAt,\n        null as season\n    from sales_order_line sol\n    left join sales_order so\n    on sol.SalesOrderId = so.SalesOrderId\n    \n    -- THIS SECTION ALSO NEEDS TO BE CHANGED BACK TO ONLY USING THE MDM TRADING PARTNER TABLE\n    left join mdm_trading_partner mtp\n    on so.TradingPartnerId = mtp.TradingPartnerId\n    left join trading_partner tp\n    on mtp.Name = tp.Name\n    -- left join trading_partner_handling_fee tphf\n    -- on so.TradingPartnerId = tphf.TradingPartnerId\n    --     and so.PlacedAt >= tphf.StartDate\n    --     and (so.PlacedAt <= tphf.EndDate or tphf.EndDate is null)\n    left join order_protection_mapping opm\n    on cast(sol.SourceId as nvarchar(200)) = cast(opm.Number as nvarchar(200))\n    left join order_protection_item opi\n    on opm.BrandId = opi.BrandId\n    left join \"KNSDataWarehouse\".\"Deposco\".\"DimItem\" di \n    on sol.ItemId = di.ItemId\n    left join \"KNSDevDbt\".\"dbt_prod_staging\".\"stg_products__Brand\" b\n    on di.BrandId = b.BrandId\n    where tp.Name not in (\n        'Marketing',\n        '- No Customer/Project -'\n    )\n),\n\ndepsco_filters as (\n    select\n        j.*\n    from joined j\n    where (j.PONumber is null \n            or j.PONumber not like 'FBA%')\n        and not (j.HeaderShippingStatus = 'Shipped' \n            and j.ItemId = 153085\n            and j.LineStatus != 'Complete')\n),\n\nfinal as (\n    select\n        Number,\n        ItemId,\n        TradingPartnerId,\n        Brand,\n        LastUpdatedAt,\n        Amount,\n        Quantity,\n        PONumber,\n        PlacedDate,\n        CreatedDate,\n        ContractualShipDate,\n        PlannedShipDate,\n        ActualShipDate,\n        HeaderCurrentStatus,\n        HeaderShippingStatus,\n        LineStatus,\n        FreightOutCOGS,\n        ItemCOGS,\n        HandlingFee,\n        DiscountAmount,\n        RecordUpdatedAt,\n        Season\n    from depsco_filters\n)\n\nselect * from final", "relation_name": "\"KNSDevDbt\".\"dbt_prod_intermediate\".\"int_sales__FactSalesLine_Deposco\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.589480Z", "completed_at": "2025-06-06T16:35:45.589480Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.589480Z", "completed_at": "2025-06-06T16:35:45.589480Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015582799911499023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.accepted_values_FactMarketingAd_Objective__Top_Funnel_Awareness__Mid_Funnel__Bottom_Funnel_Conversions__Retargeting__Prospecting__Retention__NBSearch__BrandSearch__PMax__BrandShopping__NBShopping__Null.96cf12787a", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        Objective as value_field,\n        count(*) as n_records\n\n    from \"KNSDevDbt\".\"dbt_prod_marts\".\"FactMarketingAd\"\n    group by Objective\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Top Funnel / Awareness','Mid Funnel','Bottom Funnel / Conversions','Retargeting','Prospecting','Retention','NBSearch','BrandSearch','PMax','BrandShopping','NBShopping','Null'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.589480Z", "completed_at": "2025-06-06T16:35:45.605103Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.605103Z", "completed_at": "2025-06-06T16:35:45.605103Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015622377395629883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.kns_dbt.not_null_FactMarketingAd_TradingPartnerId.54a6c4f487", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect TradingPartnerId\nfrom \"KNSDevDbt\".\"dbt_prod_marts\".\"FactMarketingAd\"\nwhere TradingPartnerId is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T16:35:45.605103Z", "completed_at": "2025-06-06T16:35:45.605103Z"}, {"name": "execute", "started_at": "2025-06-06T16:35:45.605103Z", "completed_at": "2025-06-06T16:35:45.605103Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.kns_dbt.FactSalesLine", "compiled": true, "compiled_code": "\n  \n\n\nwith\n\nreturns_accruals as (\n  select * from \"KNSDevDbt\".\"dbt_prod_intermediate\".\"int_sales__FactSalesLine_ReturnsAccruals\"\n),\n\ndeposco as (\n    select \n        *\n    from \"KNSDevDbt\".\"dbt_prod_intermediate\".\"int_sales__FactSalesLine_Deposco\" \n),\n\nunioned as (\n    select \n        cast(Number as nvarchar(200)) as Number,\n        cast(ItemId as int) as ItemId,\n        cast(TradingPartnerId as int) as TradingPartnerId,\n        cast(Brand as nvarchar(200)) as Brand,\n        cast(LastUpdatedAt as datetime) as LastUpdatedAt,\n        cast(Amount as decimal(19, 4)) as Amount,\n        cast(Quantity as int) as Quantity,\n        cast(PONumber as nvarchar(64)) as PONumber,\n        cast(PlacedDate as datetime) as PlacedDate,\n        cast(CreatedDate as datetime) as CreatedDate,\n        cast(ContractualShipDate as datetime) as ContractualShipDate,\n        cast(PlannedShipDate as datetime) as PlannedShipDate,\n        cast(ActualShipDate as datetime) as ActualShipDate,\n        cast(HeaderCurrentStatus as nvarchar(48)) as HeaderCurrentStatus,\n        cast(HeaderShippingStatus as nvarchar(48)) as HeaderShippingStatus,\n        cast(LineStatus as nvarchar(48)) as LineStatus,\n        cast(FreightOutCOGS as decimal(19, 4)) as FreightOutCOGS,\n        cast(ItemCOGS as decimal(19, 4)) as ItemCOGS,\n        cast(HandlingFee as decimal(19, 4)) as HandlingFee,\n        cast(DiscountAmount as decimal(19, 4)) as DiscountAmount,\n        cast(RecordUpdatedAt as datetime) as RecordUpdatedAt,\n        cast(Season as nvarchar(32)) as Season \n    from deposco\n    union all\n    select \n        cast(Number as nvarchar(200)) as Number,\n        cast(ItemId as int) as ItemId,\n        cast(TradingPartnerId as int) as TradingPartnerId,\n        cast(Brand as nvarchar(200)) as Brand,\n        cast(LastUpdatedAt as datetime) as LastUpdatedAt,\n        cast(Amount as decimal(19, 4)) as Amount,\n        cast(Quantity as int) as Quantity,\n        cast(PONumber as nvarchar(64)) as PONumber,\n        cast(PlacedDate as datetime) as PlacedDate,\n        cast(CreatedDate as datetime) as CreatedDate,\n        cast(ContractualShipDate as datetime) as ContractualShipDate,\n        cast(PlannedShipDate as datetime) as PlannedShipDate,\n        cast(ActualShipDate as datetime) as ActualShipDate,\n        cast(HeaderCurrentStatus as nvarchar(48)) as HeaderCurrentStatus,\n        cast(HeaderShippingStatus as nvarchar(48)) as HeaderShippingStatus,\n        cast(LineStatus as nvarchar(48)) as LineStatus,\n        cast(FreightOutCOGS as decimal(19, 4)) as FreightOutCOGS,\n        cast(ItemCOGS as decimal(19, 4)) as ItemCOGS,\n        cast(HandlingFee as decimal(19, 4)) as HandlingFee,\n        cast(DiscountAmount as decimal(19, 4)) as DiscountAmount,\n        cast(RecordUpdatedAt as datetime) as RecordUpdatedAt,\n        cast(Season as nvarchar(32)) as Season \n    from returns_accruals\n),\n\nfinal as (\n    select\n        *\n    from unioned\n    where PlacedDate >= datefromparts(year(getdate()) - 2, 1, 1)\n)\n\nselect * from final", "relation_name": "\"KNSDataWarehouse\".\"KNS\".\"FactSalesLine\""}], "elapsed_time": 2.124953508377075, "args": {"log_format": "default", "strict_mode": false, "write_json": true, "print": true, "show_resource_report": false, "cache_selected_only": false, "require_explicit_package_overrides_for_builtin_materializations": true, "log_format_file": "debug", "version_check": true, "compile": true, "use_colors": true, "partial_parse_file_diff": true, "exclude": [], "indirect_selection": "eager", "populate_cache": true, "require_resource_names_without_spaces": false, "log_level_file": "debug", "defer": false, "quiet": false, "log_level": "info", "empty_catalog": false, "enable_legacy_logger": false, "log_path": "C:\\actions-runner\\_work\\DataTransform\\DataTransform\\Datawarehouse\\logs", "which": "generate", "log_file_max_bytes": 10485760, "partial_parse": true, "static": false, "printer_width": 80, "vars": {}, "static_parser": true, "use_colors_file": true, "project_dir": "C:\\actions-runner\\_work\\DataTransform\\DataTransform\\Datawarehouse", "source_freshness_run_project_hooks": false, "macro_debugging": false, "select": [], "invocation_command": "dbt docs generate --profiles-dir C:/dbt", "send_anonymous_usage_stats": true, "profiles_dir": "C:/dbt", "introspect": true, "favor_state": false, "warn_error_options": {"include": [], "exclude": []}}}